{
	"id": 959341,
	"name": "Variation two",
	"traffic": 0,
	"masterVariationId": 0,
	"modifications": [
		{
			"id": 3552699,
			"selector": "",
			"type": "customScriptNew",
			"oldValue": "console.log('variation two');"
		},
		{
			"id": 3556049,
			"selector": "",
			"type": "addCSS",
			"value": ".title {\n \tcolor: blue; \n}"
		},
		{
			"id": 3556050,
			"selector": ".title",
			"type": "editHtml",
			"value": "<h1 class=\"title\" data-parsed>Title updated</h2>"
		},
		{
			"id": 3556051,
			"selector": ".text",
			"type": "hideCSS",
			"value": ""
		}
	],
	"widgets": [
		{
			"id": "04e187e7-a7fc-4e08-b2a5-666cdc054aed",
			"version": "1.2",
			"config": "{\"layout\":\"popin\",\"popinPosition\":[{\"x\":1,\"y\":1}],\"autoWidth\":true,\"popinPercentWidth\":50,\"popinPixelsWidth\":576,\"widthUnit\":\"vw\",\"autoHeight\":true,\"popinPercentHeight\":50,\"popinPixelsHeight\":305,\"heightUnit\":\"vh\",\"zindex\":\"9999\",\"zindexCustom\":1,\"isTitle\":true,\"title\":\"Title\",\"textContent\":\"Description\",\"linkType\":\"button\",\"buttonText\":\"Button\",\"redirectionUrl\":\"https://www.programme-tv.net\",\"openInNewTab\":false,\"titleTextAlign\":\"center\",\"titleTextColor\":\"rgba(0, 127, 145, 1)\",\"titleFontName\":\"inherit\",\"titleFontStyle\":\"font-style: normal !important; font-weight: normal;\",\"titleFontSize\":14,\"textAlign\":\"center\",\"textColor\":\"rgba(57, 57, 57, 1)\",\"fontName\":\"inherit\",\"fontStyle\":\"font-style: normal !important; font-weight: normal;\",\"fontSize\":14,\"buttonsBorderWidth\":1,\"buttonsBorderColor\":\"rgba(87, 184, 199, 1)\",\"buttonsBorderRadius\":4,\"buttonsBackgroundColor\":\"rgba(0, 127, 145, 1)\",\"buttonsTextColor\":\"rgba(247, 247, 247, 1)\",\"buttonsAlign\":\"center\",\"buttonsFontName\":\"inherit\",\"buttonsFontStyle\":\"font-style: normal !important; font-weight: normal;\",\"buttonsFontSize\":14,\"containerMargin\":[{\"top\":0,\"left\":0,\"bottom\":0,\"right\":0}],\"containerPadding\":[{\"top\":35,\"left\":60,\"bottom\":35,\"right\":60}],\"backgroundColor\":\"rgba(247, 247, 247, 1)\",\"isBackgroundImage\":false,\"backgroundImage\":\"https://widgets-images.abtasty.com/widgets-default-image.png\",\"backgroundSize\":\"cover\",\"backgroundPosition\":\"center\",\"backgroundRepeat\":false,\"dropShadow\":false,\"dropShadowColor\":\"rgba(57, 57, 57, 0.25);\",\"dropShadowBlur\":10,\"borderWidth\":2,\"borderColor\":\"rgba(0, 127, 145, 1)\",\"borderRadius\":4,\"overlay\":true,\"overlayColor\":\"rgba(0, 0, 0, 0.6)\",\"overlayClickable\":true,\"closeButton\":true,\"closeButtonPosition\":\"in\",\"closeButtonSize\":16,\"closeButtonColor\":\"rgba(119, 119, 119, 1)\",\"closeButtonBackgroundColor\":\"rgba(255, 255, 255, 0)\",\"closeButtonBorderRadius\":0,\"closeButtonBorderWidth\":0,\"closeButtonBorderColor\":\"rgba(57, 57, 57, 1)\",\"triggerEvent\":\"pageLoad\",\"triggerEventClick\":\"body\",\"triggerEventElementVisible\":\"body\",\"triggerEventCustomScript\":\"/* In this example snippet, the widget will be triggered as soon as any scroll is detected.\\nCreate your own by resolving resolve() with true (which does trigger) or false (which doesn't trigger) */\\n\\nfunction launchIfScroll() {\\n\\treturn new Promise(resolve => {\\n\\t\\tdocument.addEventListener('scroll', () => resolve(true), {once: true});\\n\\t});\\n}\\n\\nconst result = await launchIfScroll();\\nreturn resolve(result);\",\"isOncePerPageTrigger\":true,\"triggerEventReengageDelay\":10,\"triggerEventDelay\":0,\"autoHide\":true,\"timeHide\":2,\"displayRecurrence\":\"everytime\",\"displayRecurrence_day\":5,\"displayRecurrence_week\":2,\"displayRecurrence_month\":1,\"closingRecurrence\":\"everytime\",\"closingRecurrence_day\":5,\"closingRecurrence_week\":2,\"closingRecurrence_month\":1,\"validationRecurrence\":\"everytime\",\"validationRecurrence_day\":5,\"validationRecurrence_week\":2,\"validationRecurrence_month\":1}",
			"name": "@abtasty/popin-simple"
		}
	],
	"_taginfo": "/* Created: 2021/10/30 20:59:27 GMT+00:00 version: latest */"
}
